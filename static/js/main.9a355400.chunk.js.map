{"version":3,"sources":["movies.js","App.js","index.js"],"names":["Movies","year","title","summary","poster","genre","className","src","alt","slice","map","index","App","state","isloading","movies","Getmovies","a","axios","get","data","setState","this","genres","medium_cover_image","react","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAmCeA,MA7Bf,YAAuD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,MAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SAA8BD,IAC9B,oBAAGC,UAAU,gBAAb,UAA8BH,EAAQM,MAAM,EAAE,KAA9C,SACA,oBAAIH,UAAU,cAAd,SACGD,EAAMK,KAAI,SAACL,EAAOM,GAAR,OACT,oBAAIL,UAAU,UAAd,SACGD,GAD0BM,eC0C1BC,G,kNArDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAWZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAGnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,qBAAKA,UAAU,aAAf,SACI,qBAAKC,IAPE,cAOeC,IAAI,gBAIhC,qBAAKF,UAAU,SAAf,SACGS,EAAOL,KAAI,SAACK,EAAQJ,GACnB,OACE,cAAC,EAAD,CAEEV,KAAMc,EAAOd,KACbC,MAAOa,EAAOb,MACdC,QAASY,EAAOZ,QAChBE,MAAOU,EAAOQ,OACdnB,OAAQW,EAAOS,oBALVb,c,GAtCLc,IAAMC,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a355400.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n\n\n\nfunction Movies({year, title, summary, poster, genre}){\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title}/>\n      <div className=\"movie_data\">\n        <h3 className=\"movie_title\">{title}</h3>\n        <h5 className=\"movie_year\">{year}</h5>\n        <h5 className=\"movies_genre\">{genre}</h5>\n        <p className=\"movie_summary\">{summary.slice(0,130)}...</p>\n        <ul className=\"movie_genre\">\n          {genre.map((genre, index) => (\n            <li className=\"genre_g\" key={index}>\n              {genre}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovies.propTypes = {\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genre: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movies;","import axios from \"axios\";\nimport react from \"react\";\nimport Movies from \"./movies\";\nimport \"./App.css\";\n\nclass App extends react.Component {\n  state = {\n    isloading: true,\n    movies: [],\n  };\n\n  Getmovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json/sort_by=rating\"\n    );\n    this.setState({ movies, isloading: false }); //movies:movies와 같은뜻임\n  };\n\n  componentDidMount() {\n    this.Getmovies();\n  }\n  \n  render() {\n    const { isloading, movies } = this.state;\n    const loadingimg = \"diamond.png\";\n    \n    return (\n      <section className=\"container\">\n        {isloading ? (\n          <div className=\"loader\">\n            <div className=\"lds-circle\">\n                <img src={loadingimg} alt=\"Loading\"/>\n            </div>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movies, index) => {\n              return (\n                <Movies\n                  key={index}\n                  year={movies.year}\n                  title={movies.title}\n                  summary={movies.summary}\n                  genre={movies.genres}\n                  poster={movies.medium_cover_image}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import './index.css';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}